<?xml version="1.0"?>

<!-- gztest.launch -->  
<!-- 2019 React Robotics Ltd -->  
<!-- Nic Greenway, nic@reactrobotics.com -->  

<!-- top-level Gazebo launch file for dogbot simulation.
     usage example, with physics paused:
     roslaunch dogbot_gazebo gztest.launch paused:=true
-->  

<launch>

   <param name="robot_description" command="$(find xacro)/xacro '$(find ros_command)/urdf/dogbot.xacro'" />
   
   <!--<param name="robot_description" command="$(find xacro)/xacro '$(find ros_command)/urdf/camera.xacro'" /> -->
   
   
 

  <!-- these are the arguments you can pass this launch file, for example paused:=true -->
  <arg name="paused" default="false"/>
  <arg name="use_sim_time" default="true"/>
  <arg name="gui" default="true"/>
  <arg name="headless" value="false"/>
  <arg name="debug" default="false"/>
  <arg name="model" default="$(find dogbot_description)/urdf/dogbot.xacro"/>
  
  <arg name="postgres_log" default="false" />
  <arg name="namespace" default="dogbot" />

  <!-- Use the logic in empty_world.launch, changing only the name of the world to be launched -->
  <env name="GAZEBO_MODEL_PATH" value="$(find ros_command)/models:$(optenv GAZEBO_MODEL_PATH)" />

  
  <include file="$(find gazebo_ros)/launch/empty_world.launch">
    <arg name="debug" value="$(arg debug)" />
    <arg name="gui" value="$(arg gui)" />
    <arg name="paused" value="$(arg paused)"/>
    <arg name="use_sim_time" value="$(arg use_sim_time)"/>
    <!-- <arg name="world_name" value="$(find ros_command)/world/world_cubo.world"/> --> <!-- ADD -->
    <arg name="world_name" value="$(find ros_command)/world/my_dogbot.world"/> <!-- my world -->
  </include> 

  <!-- now set the namespace and add a dog to the world -->
  <group ns="$(arg namespace)">
    <include file="$(find dogbot_gazebo)/launch/dog.launch">
      <arg name="postgres_log" value="$(arg postgres_log)" />
      <arg name="model" value="$(arg model)" />
      <arg name="paused" value="$(arg paused)"/>
      <!-- <arg name="y_spawn" value="1.55"/> --> <!-- ADD -->
    </include>
  </group>
 
 <!-- <node pkg="ros_command" type="ros_publisher" name="ros_publisher">
  </node> -->
 
</launch>
